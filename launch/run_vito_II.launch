<launch>
    <!-- LAUNCH INTERFACE -->
    <arg name="gui" default="false" />
    <arg name="gazebo_gui" default="false" />
    <arg name="robot_name" default="vito"/>
    <arg name="use_rviz" default="false"/>
    <arg name="use_joint_state_publisher" default="true"/>
    <arg name="use_grasp_estimator" default="true"/>

    <!-- configure whether the real hardware is enabled or not -->
    <arg name="head_enabled" default="false"/>
    <arg name="left_arm_enabled" default="false"/>
    <arg name="left_hand_enabled" default="false"/>
    <arg name="right_arm_enabled" default="false"/>
    <arg name="right_hand_enabled" default="false"/>
    <!-- choose whether or not to start the full robot simulation -->
    <arg name="use_robot_sim" default="true"/>

    <!-- LAUNCH IMPLEMENTATION -->

    <!-- #### -->

    <!-- load the full robot in robot_description, useful for visualization, collision detection and planning simultaneously -->
    <!-- the selection is only due to the hand visualization which is different in real and simulation -->
    <group if="$(arg use_robot_sim)">
        <param name="robot_description" command="$(find xacro)/xacro.py $(find myo_kuka)/robot/$(arg robot_name).urdf.xacro use_mimic_tag:=false"/>
    </group>
    <group unless="$(arg use_robot_sim)">
        <param name="robot_description" command="$(find xacro)/xacro.py $(find myo_kuka)/robot/$(arg robot_name).urdf.xacro use_mimic_tag:=true"/>
    </group>

    <group if="$(arg use_joint_state_publisher)">
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <param name="use_gui" value="$(arg gui)"/>
            <!-- listens to each part -->
            <rosparam param="source_list">[/left_arm/joint_states,/left_hand/joint_states,/right_arm/joint_states,/right_hand/joint_states,/head/joint_states]</rosparam>
        </node>
    </group>

    <param name="publish_frequency" value="100"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  />

    <!-- load hardware interface and controller configurations -->
    <rosparam command="load" file="$(find myo_kuka)/config/vito_controllers.yaml"/>
    <rosparam command="load" file="$(find myo_kuka)/config/hardware_interfaces.yaml"/>


    <!-- #### simulation and planning -->

    <group if="$(arg use_robot_sim)">
        <!-- Spawn the full robot into Gazebo  -->
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot_name) -x 0 -y 0 -z 1.0 -R 0 -P 0 -Y 0" respawn="false" output="screen"/>

        <!-- load Gazebo simulation environment -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find desperate_housewife)/worlds/simple_environment.world"/>
            <arg name="paused" value="false"/>
            <!-- when using the real/sim scenario in parallel, set "use_enabled_time" to false -->
            <arg name="use_sim_time" value="true"/>
            <arg name="gui" value="$(arg gazebo_gui)"/>
            <arg name="headless" value="true"/>
            <arg name="debug" value="false"/>
        </include>

        <!-- calibration transformations -->
        <include file="$(find vito_description)/launch/fake_calibration.launch.xml"/>
        <include file="$(find kit_head_description)/launch/openni_axes.launch"/>

        <!-- spawn the environment in gazebo -->

    </group>

    <!-- #### components -->

    <group if="$(arg head_enabled)">
        <!--add a copy of the robot description within the name space -->
        <param name="robot_description" command="$(find xacro)/xacro.py $(find myo_kuka)/robot/$(arg robot_name).urdf.xacro use_mimic_tag:=true"/>
    </group>

    <!-- load the controllers in current namespace -->
    <node ns="head" name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="joint_state_controller joint_trajectory_controller"/>

    <group ns="left_arm">

        <group if="$(arg left_arm_enabled)">
        
            <param name="robot_description" command="$(find xacro)/xacro.py $(find myo_kuka)/robot/$(arg robot_name).urdf.xacro use_mimic_tag:=true"/>

            <rosparam command="load" file="$(find myo_kuka)/config/left_arm_names.yaml" />

            <include file="$(find lwr_hw)/launch/lwr_hw.launch">
                <arg name="port" value="49948"/>
                <arg name="ip" value="192.168.0.20"/>
                <arg name="name" value="left_arm"/>
            </include>

        </group>

        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller joint_trajectory_controller"/>

        <node name="controller_stopper" pkg="controller_manager" type="spawner" args="--stopped  teleoperation_controller_mt_effort PotentialFieldControlKinematicReverseEffort"/>


    </group>
    
    <group ns="left_hand">
        <group if="$(arg left_hand_enabled)">
            <!--add a copy of the robot description within the name space -->
            <param name="robot_description" command="$(find xacro)/xacro.py $(find myo_kuka)/robot/$(arg robot_name).urdf.xacro use_mimic_tag:=true"/>

            <rosparam command="load" file="$(find desperate_housewife)/config/left_hand_names.yaml" />

            <include file="$(find soft_hand_ros_control)/launch/soft_hand_hw.launch">
                <arg name="use_deafult_joint_names" value="false"/>
                <arg name="hand_id" value="1"/>
            </include>
        </group>

        <!-- load the controllers in current namespace -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="joint_state_controller joint_trajectory_controller"/>
    </group>


    <group ns="right_arm">

        <group if="$(arg right_arm_enabled)">
            <param name="robot_description" command="$(find xacro)/xacro.py $(find myo_kuka)/robot/$(arg robot_name).urdf.xacro use_mimic_tag:=true"/>

            <rosparam command="load" file="$(find myo_kuka)/config/right_arm_names.yaml" />

            <include file="$(find lwr_hw)/launch/lwr_hw.launch">
                <arg name="port" value="49939"/>
                <arg name="ip" value="192.168.0.10"/>
                <arg name="name" value="right_arm"/>
            </include>
        </group>

        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller joint_trajectory_controller"/>

        <node name="controller_stopper" pkg="controller_manager" type="spawner" args="--stopped  teleoperation_controller_mt_effort PotentialFieldControlKinematicReverseEffort"/>


    </group>

    <group ns="right_hand">
        <group if="$(arg right_hand_enabled)">
            <!--add a copy of the robot description within the name space -->
            <param name="robot_description" command="$(find xacro)/xacro.py $(find myo_kuka)/robot/$(arg robot_name).urdf.xacro use_mimic_tag:=true"/>

            <rosparam command="load" file="$(find vito_description)/config/right_hand_names.yaml" />

            <include file="$(find soft_hand_ros_control)/launch/soft_hand_hw.launch">
                <arg name="use_deafult_joint_names" value="false"/>
                <arg name="hand_id" value="2"/>
            </include>
        </group>

        <!-- load the controllers in current namespace -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="joint_state_controller joint_trajectory_controller"/>

    </group>


    <group if="$(arg use_rviz)">
        <node name="myo_rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find myo_kuka)/launch/rviz_config.rviz" output="screen"/>
    </group>


</launch>
